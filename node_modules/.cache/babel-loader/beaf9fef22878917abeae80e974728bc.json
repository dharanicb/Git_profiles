{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"children\", \"disabled\", \"label\", \"slots\", \"slotProps\", \"focusableWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport useMenuButton from '../useMenuButton';\nimport composeClasses from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getMenuButtonUtilityClass } from './menuButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var active = ownerState.active,\n      disabled = ownerState.disabled,\n      open = ownerState.open;\n  var slots = {\n    root: ['root', disabled && 'disabled', active && 'active', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));\n};\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */\n\n\nvar MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, forwardedRef) {\n  var children = props.children,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$slots = props.slots,\n      slots = _props$slots === void 0 ? {} : _props$slots,\n      _props$slotProps = props.slotProps,\n      slotProps = _props$slotProps === void 0 ? {} : _props$slotProps,\n      _props$focusableWhenD = props.focusableWhenDisabled,\n      focusableWhenDisabled = _props$focusableWhenD === void 0 ? false : _props$focusableWhenD,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var _useMenuButton = useMenuButton({\n    disabled: disabled,\n    focusableWhenDisabled: focusableWhenDisabled,\n    rootRef: forwardedRef\n  }),\n      getRootProps = _useMenuButton.getRootProps,\n      open = _useMenuButton.open,\n      active = _useMenuButton.active;\n\n  var ownerState = _extends({}, props, {\n    open: open,\n    active: active,\n    disabled: disabled,\n    focusableWhenDisabled: focusableWhenDisabled\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  var Root = slots.root || 'button';\n  var rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef,\n      type: 'button'\n    },\n    ownerState: ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, allows a disabled button to receive focus.\n   * @default false\n   */\n  focusableWhenDisabled: PropTypes.bool,\n\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n\n  /**\n   * The components used for each slot inside the MenuButton.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The props used for each slot inside the MenuButton.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default MenuButton;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","useSlotProps","useMenuButton","composeClasses","useClassNamesOverride","getMenuButtonUtilityClass","jsx","_jsx","useUtilityClasses","ownerState","active","disabled","open","slots","root","MenuButton","forwardRef","props","forwardedRef","children","slotProps","focusableWhenDisabled","other","rootRef","getRootProps","classes","Root","rootProps","elementType","getSlotProps","externalForwardedProps","externalSlotProps","additionalProps","ref","type","className","process","env","NODE_ENV","propTypes","node","bool","label","string","shape","oneOfType","func","object"],"sources":["/home/workspace/react-hooks/sessions/making-api-call-with-hooks-part-2/node_modules/.pnpm/@mui+base@5.0.0-beta.9_react-dom@18.2.0+react@18.2.0/node_modules/@mui/base/MenuButton/MenuButton.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"disabled\", \"label\", \"slots\", \"slotProps\", \"focusableWhenDisabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSlotProps } from '../utils';\nimport useMenuButton from '../useMenuButton';\nimport composeClasses from '../composeClasses';\nimport { useClassNamesOverride } from '../utils/ClassNameConfigurator';\nimport { getMenuButtonUtilityClass } from './menuButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    active,\n    disabled,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', active && 'active', open && 'expanded']\n  };\n  return composeClasses(slots, useClassNamesOverride(getMenuButtonUtilityClass));\n};\n\n/**\n *\n * Demos:\n *\n * - [Menu](https://mui.com/base-ui/react-menu/)\n *\n * API:\n *\n * - [MenuButton API](https://mui.com/base-ui/react-menu/components-api/#menu-button)\n */\nconst MenuButton = /*#__PURE__*/React.forwardRef(function MenuButton(props, forwardedRef) {\n  const {\n      children,\n      disabled = false,\n      slots = {},\n      slotProps = {},\n      focusableWhenDisabled = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getRootProps,\n    open,\n    active\n  } = useMenuButton({\n    disabled,\n    focusableWhenDisabled,\n    rootRef: forwardedRef\n  });\n  const ownerState = _extends({}, props, {\n    open,\n    active,\n    disabled,\n    focusableWhenDisabled\n  });\n  const classes = useUtilityClasses(ownerState);\n  const Root = slots.root || 'button';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    getSlotProps: getRootProps,\n    externalForwardedProps: other,\n    externalSlotProps: slotProps.root,\n    additionalProps: {\n      ref: forwardedRef,\n      type: 'button'\n    },\n    ownerState,\n    className: classes.root\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, allows a disabled button to receive focus.\n   * @default false\n   */\n  focusableWhenDisabled: PropTypes.bool,\n  /**\n   * Label of the button\n   */\n  label: PropTypes.string,\n  /**\n   * The components used for each slot inside the MenuButton.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The props used for each slot inside the MenuButton.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  })\n} : void 0;\nexport default MenuButton;"],"mappings":"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"},"metadata":{},"sourceType":"module"}